version: '3.7'
services:
  flask:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    container_name: flask
    image: flask-python:3.8
    restart: unless-stopped
    command: gunicorn --bind 0.0.0.0:5000 wsgi --workers 2
    env_file:
      .env
    environment:
      - ENV=prod
      - DB_HOST=postgresdb
    depends_on:
      - postgresdb
    networks:
      - backend
    ports:
      - "5001:5000"
  postgresdb:
    image: postgres
    restart: always
    env_file:
      .env
    volumes:
      - postgresdb:/data/postgresdb
    networks:
      - backend
  frontend:
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile
    restart: always
    environment:
      PORT: 3000
      REACT_APP_API_URL: http://localhost/api/
    volumes:
      - frontdata:/data/frontdata
    networks:
      - frontend
  webserver:
    build:
      context: docker/nginx
      dockerfile: Dockerfile
    image: webserver:latest
    container_name: webserver
    restart: unless-stopped
    environment:
      APP_ENV: "prod"
      APP_NAME: "webserver"
      APP_DEBUG: "false"
      SERVICE_NAME: "webserver"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - nginxdata:/var/log/nginx
    depends_on:
      - flask
    networks:
      - frontend
      - backend
networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
volumes:
  postgresdb:
    driver: local
  appdata:
    driver: local
  frontdata:
    driver: local
  nginxdata:
    driver: local
